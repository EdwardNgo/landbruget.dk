[project]
name = "unified-pipeline"
version = "0.1.0"
description = "Unified pipeline for fetching and processing data."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" } 
authors = [
    {name = "Rahul Sahoo", email = "rahulsahoo66@gmail.com"},
]
dependencies = [
    "click>=8.1.8",
    "cryptography>=44.0.3",
    "gcsfs>=2025.3.2",
    "geopandas>=1.0.1",
    "google-cloud-storage>=3.1.0",
    "ibis-framework[duckdb,geospatial]>=10.5.0",
    "loguru>=0.7.3",
    "lxml>=5.4.0",
    "pandas>=2.2.3",
    "pyarrow>=20.0.0",
    "pydantic-settings>=2.9.1",
    "pydantic>=2.11.4",
    "python-dotenv>=1.1.0",
    "simple-singleton>=2.0.0",
    "tenacity>=9.1.2",
    "tqdm>=4.66.2",
    "xmltodict>=0.13.0",
    "zeep>=4.3.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/unified_pipeline"]
include = ["*.py"]

[tool.hatch.build]
only-packages = true
artifacts = ["*.py"]

[tool.uv]

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "ruff>=0.11.8",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
follow_untyped_imports = true

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N"]
ignore = []

[tool.ruff.lint.isort]
known-third-party = ["click", "cryptography", "gcsfs", "geopandas", "google", "ibis_framework", "loguru", "lxml", "pandas", "pyarrow", "pydantic", "dotenv", "simple_singleton"]
